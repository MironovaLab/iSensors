% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iSensor.R
\name{iSensor_signal}
\alias{iSensor_signal}
\title{Calculate Panel Signals for iSensor Object}
\usage{
iSensor_signal(
  iSensor_obj,
  panels = NULL,
  transform,
  normed = FALSE,
  normBy = "cols",
  metaPanels = NULL,
  doParallel = FALSE,
  nCores = NULL
)
}
\arguments{
\item{iSensor_obj}{An iSensor object created by `create_iSensor`}

\item{panels}{Character vector of panel names to analyze (NULL uses all panels)}

\item{transform}{Aggregation method: 'mean' or 'median'}

\item{normed}{Logical indicating whether to normalize signals (default: FALSE)}

\item{normBy}{Normalization direction: 'cols' (by samples) or 'rows' (by genes)}

\item{metaPanels}{List specifying meta-panels to create (see Details)}

\item{doParallel}{Logical indicating whether to use parallel processing (default: FALSE)}

\item{nCores}{Number of cores for parallel processing (NULL uses available-1)}
}
\value{
The modified iSensor object with computed signals stored in `Signals` slot
}
\description{
Computes aggregated signals (mean/median) for each gene panel in an iSensor object.
Supports normalization options and parallel processing for large datasets.
}
\details{
The `metaPanels` parameter should be a named list where each element contains:
\itemize{
  \item `srcPanels`: Vector of source panel names
  \item `rule`: Function to combine signals (e.g., `prod`, `sum`)
}
}
\examples{
\dontrun{
# Calculate mean signals
iSensor_obj <- iSensor_signal(iSensor_obj, transform = "mean")

# Calculate normalized median signals with parallel processing
iSensor_obj <- iSensor_signal(iSensor_obj, 
                             transform = "median",
                             normed = TRUE,
                             doParallel = TRUE)

# With custom meta-panel
iSensor_obj <- iSensor_signal(iSensor_obj,
                             transform = "mean",
                             metaPanels = list(
                               "MyMeta" = list(
                                 srcPanels = c("Panel1", "Panel2"),
                                 rule = prod
                               )
                             ))
}

}
