% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{CalcSensors}
\alias{CalcSensors}
\title{Calculate Sensor Signals from Expression Data}
\usage{
CalcSensors(data, seurLayer = "RNA", panelSet, signals = c("mean_normed"))
}
\arguments{
\item{data}{A \code{Seurat} object or numeric expression matrix (genes x samples).}

\item{seurLayer}{Character. Assay layer name to extract data from Seurat object (e.g., "RNA"). Default "RNA".}

\item{panelSet}{An \code{iSensorsPanelSet} object containing gene panels to calculate signals for.}

\item{signals}{Character vector. Types of signals to compute. Allowed values:
\code{"mean"}, \code{"mean_normed"}, \code{"median"}, \code{"median_normed"}.
Default is \code{"mean_normed"}.}
}
\value{
If input is a Seurat object, returns the same Seurat object with added assays for each signal.
If input is a numeric matrix, returns an \code{iSensors} object with calculated signals.
}
\description{
Computes sensor signals based on predefined gene panels from expression data.
Supports input as Seurat objects or raw expression matrices, and calculates multiple
summary signals including mean, median, and their normalized versions.
}
\details{
The function computes sensor signals for each gene panel by summarizing gene expression values
across panel genes in each sample or cell. Normalization is done by dividing gene expression by
the mean or median expression per sample or gene, depending on the signal type.

Signals are stored in assays within Seurat objects named as \code{"iSensors_<signal>"},
e.g. \code{iSensors_mean_normed}.
}
\examples{
\dontrun{
library(Seurat)

# Using Seurat object
seurat_obj <- Read10X(data.dir = "path/to/data")
seurat_obj <- CreateSeuratObject(counts = seurat_obj)
panelSet <- LoadSensors(setName = "ArabidopsisAuxin")

seurat_obj <- CalcSensors(seurat_obj, seurLayer = "RNA", panelSet = panelSet,
                          signals = c("mean_normed", "median"))

# Access sensor signal assay
head(seurat_obj@assays$iSensors_mean_normed@counts)

# Using raw matrix
expr_mat <- as.matrix(GetAssayData(seurat_obj, slot = "counts"))
iSensor_obj <- CalcSensors(expr_mat, panelSet = panelSet,
                           signals = c("mean", "median_normed"))
}

}
